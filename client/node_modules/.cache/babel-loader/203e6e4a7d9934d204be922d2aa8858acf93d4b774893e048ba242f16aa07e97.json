{"ast":null,"code":"import _objectSpread from\"C:/Users/ajieh/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/ajieh/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"onChange\"];import{Button,Checkbox,FormControl,FormErrorMessage,FormLabel,HStack,Input,InputGroup,InputRightElement,NumberInput,NumberInputField,Radio,RadioGroup,VStack}from'@chakra-ui/react';import{Field,Form,Formik}from'formik';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Settings(_ref){var jobID=_ref.jobID,setJobID=_ref.setJobID;var validate=function validate(values){var errors={};// repeatingLoglinesPercent validation\nif(isNaN(values.repeatingLoglinesPercent)||Number(values.repeatingLoglinesPercent)<0||Number(values.repeatingLoglinesPercent)>1){errors.repeatingLoglinesPercent='Must be between 0% and 100%';}// mode validation\nif(values.mode==='Stream'){// stream mode validation\nif(values.streamSettings.streamAddress===''){errors.streamSettings={streamAddress:'Required'};}}else if(values.mode==='Batch'){// batch mode validation\nif(isNaN(values.batchSettings.numberOfLogs)){errors.batchSettings={numberOfLogs:'Must be a number'};}else if(Number(values.batchSettings.numberOfLogs)<1){errors.batchSettings={numberOfLogs:'Must be more than 0'};}else if(Number(values.batchSettings.numberOfLogs)>1000000000){errors.batchSettings={numberOfLogs:'Must be a number equal or below 1,000,000,000'};}}else{errors.mode='Invalid mode selected';}return errors;};return/*#__PURE__*/_jsx(Formik,{initialValues:{repeatingLoglinesPercent:0,fieldSettings:{includeTimeStamp:true,includeProcessingTime:true,includeCurrentUserID:true,includeBusinessGUID:true,includePathToFile:true,includeFileSHA256:true,includeDisposition:true},malwareSettings:{includeTrojan:false,includeAdware:false,includeRansom:false},mode:'Stream',streamSettings:{streamAddress:'',saveLogs:false},batchSettings:{numberOfLogs:0}},validate:validate,onSubmit:function onSubmit(values,actions){// round numberOfLogs to nearest integer\nvalues.batchSettings.numberOfLogs=Math.round(values.batchSettings.numberOfLogs);var address=process.env.REACT_APP_API_URL+'generate/';if(values.mode==='Batch'){address=address+'batch';}else{address=address+'stream';}//alert(JSON.stringify(values, null, 2));\nconsole.log(JSON.stringify(values,null,2));var requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(values)};fetch(address,requestOptions).then(function(response){if(response.ok){return response.text();}throw Error(\"Couldn't submit at this time, please try again later\");}).then(function(data){console.log(data);setJobID(data);}).catch(function(err){return alert(err);}).finally(function(){return actions.setSubmitting(false);});},children:function children(props){return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(VStack,{spacing:\"1.5em\",align:\"flex-start\",children:[/*#__PURE__*/_jsx(Field,{name:\"repeatingLoglinesPercent\",children:function children(_ref2){var field=_ref2.field,form=_ref2.form;return/*#__PURE__*/_jsxs(FormControl,{isInvalid:form.errors.repeatingLoglinesPercent,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Repeating Loglines\"}),/*#__PURE__*/_jsx(InputGroup,{maxW:\"6em\",children:/*#__PURE__*/_jsxs(NumberInput,{min:0,max:100,onChange:function onChange(val){return form.setFieldValue(field.name,val/100);},children:[/*#__PURE__*/_jsx(NumberInputField,{placeholder:\"0\"}),/*#__PURE__*/_jsx(InputRightElement,{pointerEvents:\"none\",color:\"gray.300\",fontSize:\"1.2em\",children:\"%\"})]})}),/*#__PURE__*/_jsx(FormErrorMessage,{children:form.errors.repeatingLoglinesPercent})]});}}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Include Fields:\"}),/*#__PURE__*/_jsxs(VStack,{spacing:\"0.75em\",align:\"flex-start\",children:[/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includeTimeStamp\",defaultChecked:true,children:\"Time stamp\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includeProcessingTime\",defaultChecked:true,children:\"Processing time\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includeCurrentUserID\",defaultChecked:true,children:\"Current user ID\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includeBusinessGUID\",defaultChecked:true,children:\"Business GUID\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includePathToFile\",defaultChecked:true,children:\"Path to file\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includeFileSHA256\",defaultChecked:true,children:\"File SHA256\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"fieldSettings.includeDisposition\",defaultChecked:true,children:\"Disposition\"})]})]}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Include Malware:\"}),/*#__PURE__*/_jsxs(VStack,{spacing:\"0.75em\",align:\"flex-start\",children:[/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"malwareSettings.includeTrojan\",children:\"Trojan\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"malwareSettings.includeAdware\",children:\"Adware\"}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"malwareSettings.includeRansom\",children:\"Ransom\"})]})]}),/*#__PURE__*/_jsx(Field,{name:\"mode\",children:function children(_ref3){var field=_ref3.field,meta=_ref3.meta;var onChange=field.onChange,rest=_objectWithoutProperties(field,_excluded);return/*#__PURE__*/_jsxs(FormControl,{id:\"mode\",isInvalid:meta.touched&&meta.error,children:[/*#__PURE__*/_jsx(FormLabel,{htmlFor:\"mode\",children:\"Select Mode\"}),/*#__PURE__*/_jsx(RadioGroup,_objectSpread(_objectSpread({},rest),{},{id:\"mode\",children:/*#__PURE__*/_jsxs(HStack,{spacing:\"24px\",children:[/*#__PURE__*/_jsx(Radio,{onChange:onChange,value:\"Stream\",children:\"Stream\"}),/*#__PURE__*/_jsx(Radio,{onChange:onChange,value:\"Batch\",children:\"Batch\"})]})})),/*#__PURE__*/_jsx(FormErrorMessage,{children:meta.error})]});}}),props.values.mode==='Stream'&&/*#__PURE__*/_jsxs(VStack,{spacing:\"1em\",align:\"flex-start\",children:[/*#__PURE__*/_jsx(Field,{name:\"streamSettings.streamAddress\",children:function children(_ref4){var field=_ref4.field,meta=_ref4.meta;return/*#__PURE__*/_jsxs(FormControl,{isRequired:true,isInvalid:meta.touched&&meta.error,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Stream Address\"}),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},field),{},{placeholder:\"Stream address\"})),/*#__PURE__*/_jsx(FormErrorMessage,{children:meta.error})]});}}),/*#__PURE__*/_jsx(Field,{as:Checkbox,name:\"streamSettings.saveLogs\",children:\"Save logs\"})]}),props.values.mode==='Batch'&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{name:\"batchSettings.numberOfLogs\",children:function children(_ref5){var field=_ref5.field,form=_ref5.form,meta=_ref5.meta;return/*#__PURE__*/_jsxs(FormControl,{isRequired:true,isInvalid:meta.touched&&meta.error,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Number of Logs\"}),/*#__PURE__*/_jsx(InputGroup,{maxW:\"10em\",children:/*#__PURE__*/_jsx(NumberInput,{min:1,max:1000000000,precision:0,onChange:function onChange(val){return form.setFieldValue(field.name,val);},children:/*#__PURE__*/_jsx(NumberInputField,{placeholder:\"1000\"})})}),/*#__PURE__*/_jsx(FormErrorMessage,{children:meta.error})]});}})}),/*#__PURE__*/_jsx(Button,{mt:4,colorScheme:\"teal\",isLoading:jobID!==null||props.isSubmitting,type:\"submit\",children:\"Start\"})]})});}});}export default Settings;","map":{"version":3,"names":["Button","Checkbox","FormControl","FormErrorMessage","FormLabel","HStack","Input","InputGroup","InputRightElement","NumberInput","NumberInputField","Radio","RadioGroup","VStack","Field","Form","Formik","React","Settings","jobID","setJobID","validate","values","errors","isNaN","repeatingLoglinesPercent","Number","mode","streamSettings","streamAddress","batchSettings","numberOfLogs","fieldSettings","includeTimeStamp","includeProcessingTime","includeCurrentUserID","includeBusinessGUID","includePathToFile","includeFileSHA256","includeDisposition","malwareSettings","includeTrojan","includeAdware","includeRansom","saveLogs","actions","Math","round","address","process","env","REACT_APP_API_URL","console","log","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","ok","text","Error","data","catch","err","alert","finally","setSubmitting","props","field","form","val","setFieldValue","name","meta","onChange","rest","touched","error","isSubmitting"],"sources":["C:/Users/ajieh/OneDrive/Desktop/ENSF 609_610/Cisco_Project/log-generator/client/src/components/Settings.js"],"sourcesContent":["import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  HStack,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Radio,\r\n  RadioGroup,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\n\r\nfunction Settings({ jobID, setJobID }) {\r\n  const validate = values => {\r\n    const errors = {};\r\n\r\n    // repeatingLoglinesPercent validation\r\n    if (\r\n      isNaN(values.repeatingLoglinesPercent) ||\r\n      Number(values.repeatingLoglinesPercent) < 0 ||\r\n      Number(values.repeatingLoglinesPercent) > 1\r\n    ) {\r\n      errors.repeatingLoglinesPercent = 'Must be between 0% and 100%';\r\n    }\r\n\r\n    // mode validation\r\n    if (values.mode === 'Stream') {\r\n      // stream mode validation\r\n      if (values.streamSettings.streamAddress === '') {\r\n        errors.streamSettings = { streamAddress: 'Required' };\r\n      }\r\n    } else if (values.mode === 'Batch') {\r\n      // batch mode validation\r\n      if (isNaN(values.batchSettings.numberOfLogs)) {\r\n        errors.batchSettings = {\r\n          numberOfLogs: 'Must be a number',\r\n        };\r\n      } else if (Number(values.batchSettings.numberOfLogs) < 1) {\r\n        errors.batchSettings = {\r\n          numberOfLogs: 'Must be more than 0',\r\n        };\r\n      } else if (Number(values.batchSettings.numberOfLogs) > 1000000000) {\r\n        errors.batchSettings = {\r\n          numberOfLogs: 'Must be a number equal or below 1,000,000,000',\r\n        };\r\n      }\r\n    } else {\r\n      errors.mode = 'Invalid mode selected';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        repeatingLoglinesPercent: 0,\r\n        fieldSettings: {\r\n          includeTimeStamp: true,\r\n          includeProcessingTime: true,\r\n          includeCurrentUserID: true,\r\n          includeBusinessGUID: true,\r\n          includePathToFile: true,\r\n          includeFileSHA256: true,\r\n          includeDisposition: true,\r\n        },\r\n        malwareSettings: {\r\n          includeTrojan: false,\r\n          includeAdware: false,\r\n          includeRansom: false,\r\n        },\r\n        mode: 'Stream',\r\n        streamSettings: {\r\n          streamAddress: '',\r\n          saveLogs: false,\r\n        },\r\n        batchSettings: {\r\n          numberOfLogs: 0,\r\n        },\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(values, actions) => {\r\n        // round numberOfLogs to nearest integer\r\n        values.batchSettings.numberOfLogs = Math.round(\r\n          values.batchSettings.numberOfLogs\r\n        );\r\n\r\n        let address = process.env.REACT_APP_API_URL + 'generate/';\r\n        if (values.mode === 'Batch') {\r\n          address = address + 'batch';\r\n        } else {\r\n          address = address + 'stream';\r\n        }\r\n\r\n        //alert(JSON.stringify(values, null, 2));\r\n        console.log(JSON.stringify(values, null, 2));\r\n        const requestOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(values),\r\n        };\r\n\r\n        fetch(address, requestOptions)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.text();\r\n            }\r\n\r\n            throw Error(\"Couldn't submit at this time, please try again later\");\r\n          })\r\n          .then(data => {\r\n            console.log(data);\r\n            setJobID(data);\r\n          })\r\n          .catch(err => alert(err))\r\n          .finally(() => actions.setSubmitting(false));\r\n      }}\r\n    >\r\n      {props => (\r\n        <Form>\r\n          <VStack spacing=\"1.5em\" align=\"flex-start\">\r\n            <Field name=\"repeatingLoglinesPercent\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.repeatingLoglinesPercent}>\r\n                  <FormLabel>Repeating Loglines</FormLabel>\r\n                  <InputGroup maxW=\"6em\">\r\n                    <NumberInput\r\n                      min={0}\r\n                      max={100}\r\n                      onChange={val =>\r\n                        form.setFieldValue(field.name, val / 100)\r\n                      }\r\n                    >\r\n                      <NumberInputField placeholder=\"0\" />\r\n                      <InputRightElement\r\n                        pointerEvents=\"none\"\r\n                        color=\"gray.300\"\r\n                        fontSize=\"1.2em\"\r\n                        children=\"%\"\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n                  <FormErrorMessage>\r\n                    {form.errors.repeatingLoglinesPercent}\r\n                  </FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <FormControl>\r\n              <FormLabel>Include Fields:</FormLabel>\r\n              <VStack spacing=\"0.75em\" align=\"flex-start\">\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includeTimeStamp\"\r\n                  defaultChecked\r\n                >\r\n                  Time stamp\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includeProcessingTime\"\r\n                  defaultChecked\r\n                >\r\n                  Processing time\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includeCurrentUserID\"\r\n                  defaultChecked\r\n                >\r\n                  Current user ID\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includeBusinessGUID\"\r\n                  defaultChecked\r\n                >\r\n                  Business GUID\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includePathToFile\"\r\n                  defaultChecked\r\n                >\r\n                  Path to file\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includeFileSHA256\"\r\n                  defaultChecked\r\n                >\r\n                  File SHA256\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fieldSettings.includeDisposition\"\r\n                  defaultChecked\r\n                >\r\n                  Disposition\r\n                </Field>\r\n              </VStack>\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Include Malware:</FormLabel>\r\n              <VStack spacing=\"0.75em\" align=\"flex-start\">\r\n                <Field as={Checkbox} name=\"malwareSettings.includeTrojan\">\r\n                  Trojan\r\n                </Field>\r\n                <Field as={Checkbox} name=\"malwareSettings.includeAdware\">\r\n                  Adware\r\n                </Field>\r\n                <Field as={Checkbox} name=\"malwareSettings.includeRansom\">\r\n                  Ransom\r\n                </Field>\r\n              </VStack>\r\n            </FormControl>\r\n            <Field name=\"mode\">\r\n              {({ field, meta }) => {\r\n                const { onChange, ...rest } = field;\r\n                return (\r\n                  <FormControl id=\"mode\" isInvalid={meta.touched && meta.error}>\r\n                    <FormLabel htmlFor=\"mode\">Select Mode</FormLabel>\r\n                    <RadioGroup {...rest} id=\"mode\">\r\n                      <HStack spacing=\"24px\">\r\n                        <Radio onChange={onChange} value=\"Stream\">\r\n                          Stream\r\n                        </Radio>\r\n                        <Radio onChange={onChange} value=\"Batch\">\r\n                          Batch\r\n                        </Radio>\r\n                      </HStack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>{meta.error}</FormErrorMessage>\r\n                  </FormControl>\r\n                );\r\n              }}\r\n            </Field>\r\n            {props.values.mode === 'Stream' && (\r\n              <VStack spacing=\"1em\" align=\"flex-start\">\r\n                <Field name=\"streamSettings.streamAddress\">\r\n                  {({ field, meta }) => (\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={meta.touched && meta.error}\r\n                    >\r\n                      <FormLabel>Stream Address</FormLabel>\r\n                      <Input {...field} placeholder=\"Stream address\" />\r\n                      <FormErrorMessage>{meta.error}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n                <Field as={Checkbox} name=\"streamSettings.saveLogs\">\r\n                  Save logs\r\n                </Field>\r\n              </VStack>\r\n            )}\r\n            {props.values.mode === 'Batch' && (\r\n              <div>\r\n                <Field name=\"batchSettings.numberOfLogs\">\r\n                  {({ field, form, meta }) => (\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={meta.touched && meta.error}\r\n                    >\r\n                      <FormLabel>Number of Logs</FormLabel>\r\n                      <InputGroup maxW=\"10em\">\r\n                        <NumberInput\r\n                          min={1}\r\n                          max={1000000000}\r\n                          precision={0}\r\n                          onChange={val => form.setFieldValue(field.name, val)}\r\n                        >\r\n                          <NumberInputField placeholder=\"1000\" />\r\n                        </NumberInput>\r\n                      </InputGroup>\r\n                      <FormErrorMessage>{meta.error}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n            )}\r\n            <Button\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isLoading={jobID !== null || props.isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Start\r\n            </Button>\r\n          </VStack>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}