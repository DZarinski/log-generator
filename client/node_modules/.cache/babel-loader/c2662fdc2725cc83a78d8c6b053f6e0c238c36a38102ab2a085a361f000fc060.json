{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajieh\\\\OneDrive\\\\Desktop\\\\ENSF 609_610\\\\Cisco_Project\\\\log-generator\\\\client\\\\src\\\\components\\\\Settings.js\";\nimport { Button, Checkbox, FormControl, FormErrorMessage, FormLabel, HStack, Input, InputGroup, InputRightElement, NumberInput, NumberInputField, Radio, RadioGroup, VStack } from '@chakra-ui/react';\nimport { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  const validate = values => {\n    const errors = {};\n\n    // repeatingLoglinesPercent validation\n    if (isNaN(values.repeatingLoglinesPercent) || Number(values.repeatingLoglinesPercent) < 0 || Number(values.repeatingLoglinesPercent) > 100) {\n      errors.repeatingLoglinesPercent = 'Must be between 0% and 100%';\n    }\n\n    // mode validation\n    if (values.mode === 'Stream') {\n      // stream mode validation\n      if (values.stream.streamAddress === '') {\n        errors.stream = {};\n        errors.stream.streamAddress = 'Required';\n      }\n    } else if (values.mode === 'Batch') {\n      // batch mode validation\n      if (isNaN(values.batch.numberOfLogs)) {\n        errors.batch = {};\n        errors.batch.numberOfLogs = 'Must be a number';\n      } else if (Number(values.batch.numberOfLogs) < 1) {\n        errors.batch = {};\n        errors.batch.numberOfLogs = 'Must be more than 0';\n      } else if (Number(values.batch.numberOfLogs) > 1000000000) {\n        errors.batch = {};\n        errors.batch.numberOfLogs = 'Must be a number equal or below 1,000,000,000';\n      }\n    } else {\n      errors.mode = 'Invalid mode selected';\n    }\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      repeatingLoglinesPercent: 0,\n      fields: {\n        includeTimeStamp: true,\n        includeProcessingTime: true,\n        includeCurrentUserID: true,\n        includeBusinessGUID: true,\n        includePathToFile: true,\n        includeFileSHA256: true,\n        includeDisposition: true\n      },\n      malware: {\n        includeTrojan: false,\n        includeAdware: false,\n        includeRansom: false\n      },\n      mode: 'Stream',\n      stream: {\n        streamAddress: '',\n        saveLogs: false\n      },\n      batch: {\n        numberOfLogs: 0\n      }\n    },\n    validate: validate,\n    onSubmit: (values, actions) => {\n      // round numberOfLogs to nearest integer\n      values.batch.numberOfLogs = Math.round(values.batch.numberOfLogs);\n\n      // display json output\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        alert(JSON.stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 1000);\n    },\n    children: props => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: \"1.5em\",\n        align: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"repeatingLoglinesPercent\",\n          children: _ref => {\n            let {\n              field,\n              form\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: form.errors.repeatingLoglinesPercent,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Repeating Loglines\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                maxW: \"6em\",\n                children: /*#__PURE__*/_jsxDEV(NumberInput, {\n                  min: 0,\n                  max: 100,\n                  onChange: val => form.setFieldValue(field.name, val),\n                  children: [/*#__PURE__*/_jsxDEV(NumberInputField, {\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                    pointerEvents: \"none\",\n                    color: \"gray.300\",\n                    fontSize: \"1.2em\",\n                    children: \"%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: form.errors.repeatingLoglinesPercent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Include Fields:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: \"0.75em\",\n            align: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includeTimeStamp\",\n              defaultChecked: true,\n              children: \"Time stamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includeProcessingTime\",\n              defaultChecked: true,\n              children: \"Processing time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includeCurrentUserID\",\n              defaultChecked: true,\n              children: \"Current user ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includeBusinessGUID\",\n              defaultChecked: true,\n              children: \"Business GUID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includePathToFile\",\n              defaultChecked: true,\n              children: \"Path to file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includeFileSHA256\",\n              defaultChecked: true,\n              children: \"File SHA256\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"fields.includeDisposition\",\n              defaultChecked: true,\n              children: \"Disposition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Include Malware:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: \"0.75em\",\n            align: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"malware.includeTrojan\",\n              children: \"Trojan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"malware.includeAdware\",\n              children: \"Adware\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: Checkbox,\n              name: \"malware.includeRansom\",\n              children: \"Ransom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"mode\",\n          children: _ref2 => {\n            let {\n              field,\n              meta\n            } = _ref2;\n            const {\n              onChange,\n              ...rest\n            } = field;\n            return /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"mode\",\n              isInvalid: meta.touched && meta.error,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"mode\",\n                children: \"Select Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                ...rest,\n                id: \"mode\",\n                children: /*#__PURE__*/_jsxDEV(HStack, {\n                  spacing: \"24px\",\n                  children: [/*#__PURE__*/_jsxDEV(Radio, {\n                    onChange: onChange,\n                    value: \"Stream\",\n                    children: \"Stream\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                    onChange: onChange,\n                    value: \"Batch\",\n                    children: \"Batch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: meta.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), props.values.mode === 'Stream' && /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: \"1em\",\n          align: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"stream.streamAddress\",\n            children: _ref3 => {\n              let {\n                field,\n                meta\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                isRequired: true,\n                isInvalid: meta.touched && meta.error,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Stream Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  ...field,\n                  placeholder: \"Stream address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: meta.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: Checkbox,\n            name: \"stream.saveLogs\",\n            children: \"Save logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), props.values.mode === 'Batch' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"batch.numberOfLogs\",\n            children: _ref4 => {\n              let {\n                field,\n                form,\n                meta\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                isRequired: true,\n                isInvalid: meta.touched && meta.error,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Number of Logs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  maxW: \"10em\",\n                  children: /*#__PURE__*/_jsxDEV(NumberInput, {\n                    min: 1,\n                    max: 1000000000,\n                    precision: 0,\n                    onChange: val => form.setFieldValue(field.name, val),\n                    children: /*#__PURE__*/_jsxDEV(NumberInputField, {\n                      placeholder: \"1000\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: meta.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          colorScheme: \"teal\",\n          isLoading: props.isSubmitting,\n          type: \"submit\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["Button","Checkbox","FormControl","FormErrorMessage","FormLabel","HStack","Input","InputGroup","InputRightElement","NumberInput","NumberInputField","Radio","RadioGroup","VStack","Field","Form","Formik","React","Settings","validate","values","errors","isNaN","repeatingLoglinesPercent","Number","mode","stream","streamAddress","batch","numberOfLogs","fields","includeTimeStamp","includeProcessingTime","includeCurrentUserID","includeBusinessGUID","includePathToFile","includeFileSHA256","includeDisposition","malware","includeTrojan","includeAdware","includeRansom","saveLogs","actions","Math","round","setTimeout","console","log","JSON","stringify","alert","setSubmitting","props","field","form","val","setFieldValue","name","meta","onChange","rest","touched","error","isSubmitting"],"sources":["C:/Users/ajieh/OneDrive/Desktop/ENSF 609_610/Cisco_Project/log-generator/client/src/components/Settings.js"],"sourcesContent":["import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  HStack,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Radio,\r\n  RadioGroup,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\n\r\nfunction Settings() {\r\n  const validate = values => {\r\n    const errors = {};\r\n\r\n    // repeatingLoglinesPercent validation\r\n    if (\r\n      isNaN(values.repeatingLoglinesPercent) ||\r\n      Number(values.repeatingLoglinesPercent) < 0 ||\r\n      Number(values.repeatingLoglinesPercent) > 100\r\n    ) {\r\n      errors.repeatingLoglinesPercent = 'Must be between 0% and 100%';\r\n    }\r\n\r\n    // mode validation\r\n    if (values.mode === 'Stream') {\r\n      // stream mode validation\r\n      if (values.stream.streamAddress === '') {\r\n        errors.stream = {};\r\n        errors.stream.streamAddress = 'Required';\r\n      }\r\n    } else if (values.mode === 'Batch') {\r\n      // batch mode validation\r\n      if (isNaN(values.batch.numberOfLogs)) {\r\n        errors.batch = {};\r\n        errors.batch.numberOfLogs = 'Must be a number';\r\n      } else if (Number(values.batch.numberOfLogs) < 1) {\r\n        errors.batch = {};\r\n        errors.batch.numberOfLogs = 'Must be more than 0';\r\n      } else if (Number(values.batch.numberOfLogs) > 1000000000) {\r\n        errors.batch = {};\r\n        errors.batch.numberOfLogs =\r\n          'Must be a number equal or below 1,000,000,000';\r\n      }\r\n    } else {\r\n      errors.mode = 'Invalid mode selected';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        repeatingLoglinesPercent: 0,\r\n        fields: {\r\n          includeTimeStamp: true,\r\n          includeProcessingTime: true,\r\n          includeCurrentUserID: true,\r\n          includeBusinessGUID: true,\r\n          includePathToFile: true,\r\n          includeFileSHA256: true,\r\n          includeDisposition: true,\r\n        },\r\n        malware: {\r\n          includeTrojan: false,\r\n          includeAdware: false,\r\n          includeRansom: false,\r\n        },\r\n        mode: 'Stream',\r\n        stream: {\r\n          streamAddress: '',\r\n          saveLogs: false,\r\n        },\r\n        batch: {\r\n          numberOfLogs: 0,\r\n        },\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(values, actions) => {\r\n        // round numberOfLogs to nearest integer\r\n        values.batch.numberOfLogs = Math.round(values.batch.numberOfLogs);\r\n\r\n        // display json output\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          alert(JSON.stringify(values, null, 2));\r\n          actions.setSubmitting(false);\r\n        }, 1000);\r\n      }}\r\n    >\r\n      {props => (\r\n        <Form>\r\n          <VStack spacing=\"1.5em\" align=\"flex-start\">\r\n            <Field name=\"repeatingLoglinesPercent\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.repeatingLoglinesPercent}>\r\n                  <FormLabel>Repeating Loglines</FormLabel>\r\n                  <InputGroup maxW=\"6em\">\r\n                    <NumberInput\r\n                      min={0}\r\n                      max={100}\r\n                      onChange={val => form.setFieldValue(field.name, val)}\r\n                    >\r\n                      <NumberInputField placeholder=\"0\" />\r\n                      <InputRightElement\r\n                        pointerEvents=\"none\"\r\n                        color=\"gray.300\"\r\n                        fontSize=\"1.2em\"\r\n                        children=\"%\"\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n                  <FormErrorMessage>\r\n                    {form.errors.repeatingLoglinesPercent}\r\n                  </FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <FormControl>\r\n              <FormLabel>Include Fields:</FormLabel>\r\n              <VStack spacing=\"0.75em\" align=\"flex-start\">\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includeTimeStamp\"\r\n                  defaultChecked\r\n                >\r\n                  Time stamp\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includeProcessingTime\"\r\n                  defaultChecked\r\n                >\r\n                  Processing time\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includeCurrentUserID\"\r\n                  defaultChecked\r\n                >\r\n                  Current user ID\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includeBusinessGUID\"\r\n                  defaultChecked\r\n                >\r\n                  Business GUID\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includePathToFile\"\r\n                  defaultChecked\r\n                >\r\n                  Path to file\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includeFileSHA256\"\r\n                  defaultChecked\r\n                >\r\n                  File SHA256\r\n                </Field>\r\n                <Field\r\n                  as={Checkbox}\r\n                  name=\"fields.includeDisposition\"\r\n                  defaultChecked\r\n                >\r\n                  Disposition\r\n                </Field>\r\n              </VStack>\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Include Malware:</FormLabel>\r\n              <VStack spacing=\"0.75em\" align=\"flex-start\">\r\n                <Field as={Checkbox} name=\"malware.includeTrojan\">\r\n                  Trojan\r\n                </Field>\r\n                <Field as={Checkbox} name=\"malware.includeAdware\">\r\n                  Adware\r\n                </Field>\r\n                <Field as={Checkbox} name=\"malware.includeRansom\">\r\n                  Ransom\r\n                </Field>\r\n              </VStack>\r\n            </FormControl>\r\n            <Field name=\"mode\">\r\n              {({ field, meta }) => {\r\n                const { onChange, ...rest } = field;\r\n                return (\r\n                  <FormControl id=\"mode\" isInvalid={meta.touched && meta.error}>\r\n                    <FormLabel htmlFor=\"mode\">Select Mode</FormLabel>\r\n                    <RadioGroup {...rest} id=\"mode\">\r\n                      <HStack spacing=\"24px\">\r\n                        <Radio onChange={onChange} value=\"Stream\">\r\n                          Stream\r\n                        </Radio>\r\n                        <Radio onChange={onChange} value=\"Batch\">\r\n                          Batch\r\n                        </Radio>\r\n                      </HStack>\r\n                    </RadioGroup>\r\n                    <FormErrorMessage>{meta.error}</FormErrorMessage>\r\n                  </FormControl>\r\n                );\r\n              }}\r\n            </Field>\r\n            {props.values.mode === 'Stream' && (\r\n              <VStack spacing=\"1em\" align=\"flex-start\">\r\n                <Field name=\"stream.streamAddress\">\r\n                  {({ field, meta }) => (\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={meta.touched && meta.error}\r\n                    >\r\n                      <FormLabel>Stream Address</FormLabel>\r\n                      <Input {...field} placeholder=\"Stream address\" />\r\n                      <FormErrorMessage>{meta.error}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n                <Field as={Checkbox} name=\"stream.saveLogs\">\r\n                  Save logs\r\n                </Field>\r\n              </VStack>\r\n            )}\r\n            {props.values.mode === 'Batch' && (\r\n              <div>\r\n                <Field name=\"batch.numberOfLogs\">\r\n                  {({ field, form, meta }) => (\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={meta.touched && meta.error}\r\n                    >\r\n                      <FormLabel>Number of Logs</FormLabel>\r\n                      <InputGroup maxW=\"10em\">\r\n                        <NumberInput\r\n                          min={1}\r\n                          max={1000000000}\r\n                          precision={0}\r\n                          onChange={val => form.setFieldValue(field.name, val)}\r\n                        >\r\n                          <NumberInputField placeholder=\"1000\" />\r\n                        </NumberInput>\r\n                      </InputGroup>\r\n                      <FormErrorMessage>{meta.error}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n            )}\r\n            <Button\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isLoading={props.isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Start\r\n            </Button>\r\n          </VStack>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}