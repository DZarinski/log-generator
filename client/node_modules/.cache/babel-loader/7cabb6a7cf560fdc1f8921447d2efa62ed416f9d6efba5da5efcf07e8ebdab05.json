{"ast":null,"code":"import _toConsumableArray from\"C:/Users/ajieh/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/ajieh/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Button,Text,useBoolean,VStack}from'@chakra-ui/react';import{Stomp}from'@stomp/stompjs';import{React,useEffect,useRef,useState}from'react';import SockJS from'sockjs-client';import Chart from'./Chart';// converts seconds to a custom time string\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var secondsToTimeString=function secondsToTimeString(totalSeconds){var hours=Math.floor(totalSeconds/3600);totalSeconds%=3600;var minutes=Math.floor(totalSeconds/60);var seconds=totalSeconds%60;var time='';if(Number(hours)>0){time+=hours+'hr ';}if(Number(minutes)>0){time+=minutes+'min ';}time+=seconds+'sec';return time;};function Tracking(_ref){var jobID=_ref.jobID,setJobID=_ref.setJobID;var _useBoolean=useBoolean(false),_useBoolean2=_slicedToArray(_useBoolean,2),loading=_useBoolean2[0],setLoading=_useBoolean2[1];var _useBoolean3=useBoolean(false),_useBoolean4=_slicedToArray(_useBoolean3,2),running=_useBoolean4[0],setRunning=_useBoolean4[1];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),uptime=_useState2[0],setUptime=_useState2[1];var _useState3=useState({timeStamp:[],logRate:[]}),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),logsCreated=_useState6[0],setlogsCreated=_useState6[1];var lastResponseRef=useRef({time:0,response:null});var _useBoolean5=useBoolean(false),_useBoolean6=_slicedToArray(_useBoolean5,2),showChart=_useBoolean6[0],setShowChart=_useBoolean6[1];//conenct to socket once there is a new jobID\nuseEffect(function(){if(jobID===null){return;}// reset values on new jobID\nsetUptime(0);setlogsCreated(0);lastResponseRef.current={time:Date.now(),response:null};setData({timeStamp:[],logRate:[]});// set running on\nsetRunning.on();// connect to socket\nvar stompClient=Stomp.over(function(){return new SockJS('http://localhost:8080/websocket-batch-service');});stompClient.debug=function(){};//disables stomp debug console logs\nstompClient.connect({},function(frame){stompClient.subscribe('/topic/job/'+jobID,function(response){// parse response\nresponse=JSON.parse(response.body);// update logsCreated\nconsole.log(response);setlogsCreated(response.logLineCount);// update chart data\nif(lastResponseRef.current.response===null){setData({timeStamp:[response.timeStamp],logRate:[0]});// show chart once first data recieved\nsetShowChart.on();}else{var logRate=Math.round((response.logLineCount-lastResponseRef.current.response.logLineCount)/((response.timeStamp-lastResponseRef.current.response.timeStamp)/1000));setData(function(prev){return{timeStamp:[].concat(_toConsumableArray(prev.timeStamp),[response.timeStamp]),logRate:[].concat(_toConsumableArray(prev.logRate),[logRate])};});}// update last response ref\nlastResponseRef.current.response=response;lastResponseRef.current.time=Date.now();});});// cleanup\nreturn function(){// deactivate socket\nstompClient.deactivate();};},[jobID,setRunning,setData,setShowChart]);// uptime and active intervals while job is running\nuseEffect(function(){var timerInterval;var activeInterval;if(running){// interval to update timer\ntimerInterval=setInterval(function(){setUptime(function(prevTime){return prevTime+1;});},1000);// interval to timeout socket\nactiveInterval=setInterval(function(){if(Number(Date.now()-lastResponseRef.current.time)>2500){setRunning.off();setJobID(null);}},1000);}else if(!running){clearInterval(timerInterval);clearInterval(activeInterval);}// cleanup\nreturn function(){clearInterval(timerInterval);clearInterval(activeInterval);};},[running,setRunning,setJobID]);// handle cancel button\nvar handleCancel=function handleCancel(){setLoading.on();fetch(process.env.REACT_APP_API_URL+'generate/stream/stop/'+jobID,{method:'POST'}).then(function(response){if(response.ok){return response.text();}throw Error(\"Couldn't cancel at this time, please try again later\");}).then(function(data){console.log(data);setRunning.off();setJobID(null);}).catch(function(err){return alert(err);}).finally(function(){return setLoading.off();});};return/*#__PURE__*/_jsxs(VStack,{spacing:\"0.5em\",align:\"start\",children:[/*#__PURE__*/_jsx(Text,{children:running?'Running':'Standby'}),/*#__PURE__*/_jsxs(Text,{children:[\"Uptime: \",secondsToTimeString(uptime)]}),\"logsCreated\",/*#__PURE__*/_jsxs(Text,{children:[\"Logs created: \",logsCreated]}),/*#__PURE__*/_jsx(Box,{pt:\"1em\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",colorScheme:\"red\",onClick:handleCancel,isLoading:loading,isDisabled:jobID===null,children:\"Cancel\"})}),showChart&&/*#__PURE__*/_jsx(Box,{minW:\"32em\",pt:\"2em\",children:/*#__PURE__*/_jsx(Chart,{data:data})})]});}export default Tracking;","map":{"version":3,"names":["Box","Button","Text","useBoolean","VStack","Stomp","React","useEffect","useRef","useState","SockJS","Chart","secondsToTimeString","totalSeconds","hours","Math","floor","minutes","seconds","time","Number","Tracking","jobID","setJobID","loading","setLoading","running","setRunning","uptime","setUptime","timeStamp","logRate","data","setData","logsCreated","setlogsCreated","lastResponseRef","response","showChart","setShowChart","current","Date","now","on","stompClient","over","debug","connect","frame","subscribe","JSON","parse","body","console","log","logLineCount","round","prev","deactivate","timerInterval","activeInterval","setInterval","prevTime","off","clearInterval","handleCancel","fetch","process","env","REACT_APP_API_URL","method","then","ok","text","Error","catch","err","alert","finally"],"sources":["C:/Users/ajieh/OneDrive/Desktop/ENSF 609_610/Cisco_Project/log-generator/client/src/components/Tracking.js"],"sourcesContent":["import { Box, Button, Text, useBoolean, VStack } from '@chakra-ui/react';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport { React, useEffect, useRef, useState } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Chart from './Chart';\r\n\r\n// converts seconds to a custom time string\r\nconst secondsToTimeString = totalSeconds => {\r\n  const hours = Math.floor(totalSeconds / 3600);\r\n  totalSeconds %= 3600;\r\n  const minutes = Math.floor(totalSeconds / 60);\r\n  const seconds = totalSeconds % 60;\r\n  let time = '';\r\n\r\n  if (Number(hours) > 0) {\r\n    time += hours + 'hr ';\r\n  }\r\n  if (Number(minutes) > 0) {\r\n    time += minutes + 'min ';\r\n  }\r\n  time += seconds + 'sec';\r\n\r\n  return time;\r\n};\r\n\r\nfunction Tracking({ jobID, setJobID }) {\r\n  const [loading, setLoading] = useBoolean(false);\r\n  const [running, setRunning] = useBoolean(false);\r\n  const [uptime, setUptime] = useState(0);\r\n  const [data, setData] = useState({\r\n    timeStamp: [],\r\n    logRate: [],\r\n  });\r\n  const [logsCreated, setlogsCreated] = useState(0);\r\n  const lastResponseRef = useRef({ time: 0, response: null });\r\n  const [showChart, setShowChart] = useBoolean(false);\r\n\r\n  //conenct to socket once there is a new jobID\r\n  useEffect(() => {\r\n    if (jobID === null) {\r\n      return;\r\n    }\r\n\r\n    // reset values on new jobID\r\n    setUptime(0);\r\n    setlogsCreated(0);\r\n    lastResponseRef.current = { time: Date.now(), response: null };\r\n    setData({\r\n      timeStamp: [],\r\n      logRate: [],\r\n    });\r\n\r\n    // set running on\r\n    setRunning.on();\r\n\r\n    // connect to socket\r\n    let stompClient = Stomp.over(\r\n      () => new SockJS('http://localhost:8080/websocket-batch-service')\r\n    );\r\n    stompClient.debug = () => {}; //disables stomp debug console logs\r\n    stompClient.connect({}, function (frame) {\r\n      stompClient.subscribe('/topic/job/' + jobID, function (response) {\r\n        // parse response\r\n        response = JSON.parse(response.body);\r\n\r\n        // update logsCreated\r\n        console.log(response);\r\n        setlogsCreated(response.logLineCount);\r\n\r\n        // update chart data\r\n        if (lastResponseRef.current.response === null) {\r\n          setData({\r\n            timeStamp: [response.timeStamp],\r\n            logRate: [0],\r\n          });\r\n\r\n          // show chart once first data recieved\r\n          setShowChart.on();\r\n        } else {\r\n          const logRate = Math.round(\r\n            (response.logLineCount -\r\n              lastResponseRef.current.response.logLineCount) /\r\n              ((response.timeStamp -\r\n                lastResponseRef.current.response.timeStamp) /\r\n                1000)\r\n          );\r\n\r\n          setData(prev => ({\r\n            timeStamp: [...prev.timeStamp, response.timeStamp],\r\n            logRate: [...prev.logRate, logRate],\r\n          }));\r\n        }\r\n\r\n        // update last response ref\r\n        lastResponseRef.current.response = response;\r\n        lastResponseRef.current.time = Date.now();\r\n      });\r\n    });\r\n\r\n    // cleanup\r\n    return () => {\r\n      // deactivate socket\r\n      stompClient.deactivate();\r\n    };\r\n  }, [jobID, setRunning, setData, setShowChart]);\r\n\r\n  // uptime and active intervals while job is running\r\n  useEffect(() => {\r\n    let timerInterval;\r\n    let activeInterval;\r\n    if (running) {\r\n      // interval to update timer\r\n      timerInterval = setInterval(() => {\r\n        setUptime(prevTime => prevTime + 1);\r\n      }, 1000);\r\n\r\n      // interval to timeout socket\r\n      activeInterval = setInterval(() => {\r\n        if (Number(Date.now() - lastResponseRef.current.time) > 2500) {\r\n          setRunning.off();\r\n          setJobID(null);\r\n        }\r\n      }, 1000);\r\n    } else if (!running) {\r\n      clearInterval(timerInterval);\r\n      clearInterval(activeInterval);\r\n    }\r\n\r\n    // cleanup\r\n    return () => {\r\n      clearInterval(timerInterval);\r\n      clearInterval(activeInterval);\r\n    };\r\n  }, [running, setRunning, setJobID]);\r\n\r\n  // handle cancel button\r\n  const handleCancel = () => {\r\n    setLoading.on();\r\n\r\n    fetch(process.env.REACT_APP_API_URL + 'generate/stream/stop/' + jobID, {\r\n      method: 'POST',\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.text();\r\n        }\r\n\r\n        throw Error(\"Couldn't cancel at this time, please try again later\");\r\n      })\r\n      .then(data => {\r\n        console.log(data);\r\n        setRunning.off();\r\n        setJobID(null);\r\n      })\r\n      .catch(err => alert(err))\r\n      .finally(() => setLoading.off());\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"0.5em\" align=\"start\">\r\n      <Text>{running ? 'Running' : 'Standby'}</Text>\r\n      <Text>Uptime: {secondsToTimeString(uptime)}</Text>logsCreated\r\n      <Text>Logs created: {logsCreated}</Text>\r\n      <Box pt=\"1em\">\r\n        <Button\r\n          type=\"submit\"\r\n          colorScheme=\"red\"\r\n          onClick={handleCancel}\r\n          isLoading={loading}\r\n          isDisabled={jobID === null}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Box>\r\n      {showChart && (\r\n        <Box minW=\"32em\" pt=\"2em\">\r\n          <Chart data={data} />\r\n        </Box>\r\n      )}\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default Tracking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}